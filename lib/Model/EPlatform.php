<?php
/**
 * EPlatform
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic.
 *
 * The version of the OpenAPI document: 1.0-rev1
 * Contact: support@veeam.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * EPlatform Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class EPlatform
{
    /**
     * Possible values of this enum
     */
    public const VMWARE = 'Vmware';

    public const HYPER_V = 'HyperV';

    public const TEST = 'Test';

    public const VCD = 'Vcd';

    public const TAPE = 'Tape';

    public const END_POINT = 'EndPoint';

    public const LINUX_PHYSICAL = 'LinuxPhysical';

    public const CUSTOM_PLATFORM = 'CustomPlatform';

    public const CONF = 'Conf';

    public const NAS_BACKUP = 'NasBackup';

    public const EMULATED_VM_WARE = 'EmulatedVmWare';

    public const EXTENSION0 = 'Extension0';

    public const EXTENSION1 = 'Extension1';

    public const EXTENSION = 'Extension';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::VMWARE,
            self::HYPER_V,
            self::TEST,
            self::VCD,
            self::TAPE,
            self::END_POINT,
            self::LINUX_PHYSICAL,
            self::CUSTOM_PLATFORM,
            self::CONF,
            self::NAS_BACKUP,
            self::EMULATED_VM_WARE,
            self::EXTENSION0,
            self::EXTENSION1,
            self::EXTENSION
        ];
    }
}


