<?php
/**
 * AutomationApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic.
 *
 * The version of the OpenAPI document: 1.0-rev1
 * Contact: support@veeam.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AutomationApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AutomationApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for exportCredentials
     *
     * Export Credentials.
     *
     */
    public function testExportCredentials()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for exportEncryptionPasswords
     *
     * Export Encryption Passwords.
     *
     */
    public function testExportEncryptionPasswords()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for exportJobs
     *
     * Export Jobs.
     *
     */
    public function testExportJobs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for exportManagedServers
     *
     * Export Servers.
     *
     */
    public function testExportManagedServers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for exportProxies
     *
     * Export Proxies.
     *
     */
    public function testExportProxies()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for exportRepositories
     *
     * Export Repositories.
     *
     */
    public function testExportRepositories()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAllAutomationSessions
     *
     * Get All Automation Sessions.
     *
     */
    public function testGetAllAutomationSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAutomationSession
     *
     * Get Automation Session.
     *
     */
    public function testGetAutomationSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAutomationSessionLogs
     *
     * Get Automation Session Logs.
     *
     */
    public function testGetAutomationSessionLogs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for importCredentials
     *
     * Import Credentials.
     *
     */
    public function testImportCredentials()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for importEncryptionPasswords
     *
     * Import Encryption Passwords.
     *
     */
    public function testImportEncryptionPasswords()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for importJobs
     *
     * Import Jobs.
     *
     */
    public function testImportJobs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for importManagedServers
     *
     * Import Servers.
     *
     */
    public function testImportManagedServers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for importProxies
     *
     * Import Proxies.
     *
     */
    public function testImportProxies()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for importRepositories
     *
     * Import Repositories.
     *
     */
    public function testImportRepositories()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for stopAutomationSession
     *
     * Stop Automation Session.
     *
     */
    public function testStopAutomationSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
